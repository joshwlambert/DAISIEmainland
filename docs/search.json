[{"path":"index.html","id":"daisiemainland-guide","chapter":"DAISIEmainland guide","heading":"DAISIEmainland guide","text":"\n\n\nguide long-form documentation DAISIEmainland R package.\ncovers basics installation (Section 1), \nalgorithm used simulate data (Section 2), \nvisualisation mainland (Section 3.1) \nisland (Section 3.2). demonstration \napplication DAISIEmainland package inference models \nDAISIE package (Section 4). Lastly, \nvisualisation summary error metrics can calculated simulated data\n(Section 5).","code":""},{"path":"index.html","id":"overview","chapter":"DAISIEmainland guide","heading":"Overview","text":"DAISIEmainland package used simulating island-mainland system.\nprimary purpose simulation phylogenetic data sets island species\nrealistic model incorporates evolutionary dynamics island \nmainland, island species immigrate. contrast \ninference simulation models included DAISIE package (Etienne et al. 2022) incorporate changes mainland\nspecies time.novel model mainland dynamics opens possibility testing \nrobustness DAISIE likelihood models various scenarios mainland\ndynamics. also include incomplete sampling mainland species, either \nsampling known species undiscovered species present \nmainland known. different sampling regimes possible \nempirical studies thus sensitivity model performance \nimportant future studies employing DAISIE inference framework.appendix (Section ) \ncontains details data structures used throughout package, \nnovel package others inherited packages\n(e.g. DAISIE). appendix meant looking contribute \nextend DAISIEmainland package explaining certain data structures\nused. reading guide understand general functionality\npackage section can ignored.work licensed Creative Commons Attribution 4.0 International License.","code":""},{"path":"installation.html","id":"installation","chapter":"1 Installation","heading":"1 Installation","text":"can install released version DAISIEmainland github :DAISIEmainland package several dependencies (entire list can \nfound DESCRIPTION file). CRAN can installed \ninstall.packages(). However, DAISIE package (Etienne et al. 2022) requires\n--date version available CRAN need installed github:Load DAISIEmainland package library() function. also\nload package dependencies, specifically DAISIE package \nused later parameter estimation fitting maximum likelihood models.DAISIEmainland currently hosted CRAN thus installed\nusing install.packages().package developed using R version >= 4. Therefore, recommended \nuse R version least recent R 4.0.0. package tested using\ncontinuous integration release version R development version\nR. Therefore, issues running DAISIEmainland functions older\nversions R patched.","code":"\n# install.packages(\"remotes\") # install remotes package if not installed\nremotes::install_github(\"joshwlambert/DAISIEmainland\")\nremotes::install_github(\"rsetienne/DAISIE\")\nlibrary(DAISIEmainland)"},{"path":"simulation-algorithm.html","id":"simulation-algorithm","chapter":"2 Simulation algorithm","heading":"2 Simulation algorithm","text":"Doob-Gillespie algorithm stochastic exact solution used \nsimulate continuous-time processes, several applications\nbiological modelling. Doob-Gillespie algorithm\ncan used evolutionary biology, example efficiently simulate \nbirth-death process. island-mainland simulation DAISIEmainland\npackage uses two-part Doob-Gillespie simulation, one mainland\n(DAISIEmainland::sim_mainland) one island\n(DAISIEmainland::sim_island).","code":""},{"path":"simulation-algorithm.html","id":"mainland-simulation","chapter":"2 Simulation algorithm","heading":"2.1 Mainland simulation","text":"mainland simulation uses Doob-Gillespie algorithm simulate \nspeciation extinction species Moran process, whereby every species extinction immediately followed random species giving rise two new species (speciation). ensures \nconstant number species mainland. mainland phylogenetic data fed \nisland simulation (Section 2.2). example shows mainland data \nsimulated time duration one (million years), five initial mainland species, mainland extinction rate one (per species per million years).output list five mainland clades called multi_mainland_clade (\nsee Section .2.4).Specifically focusing one mainland clades (see Section .2.5):can see information mainland clade include ID \nspecies (spec_id). ID mainland ancestor species\nderived (main_anc_id). type species (spec_type) can ,\nC, E single lineage clade, cladogenetic species clade, \nextinct species, respectively. mainland species initialised \nspec_id = simulation progresses species become either\npart clade (C) extinct (E). keeping extinct species \nfull history mainland -called reconstructed history \ncontain living (extant) species. branch_code provides \nevolutionary relationships species clade allows topology\nclade constructed. branch_t time species\nspeciated common ancestor (time start simulation\ntime present). spec_origin_t time species\noriginated often equal branch_t. spec_ex_t time species went extinct (time start simulation). Species\ngo extinct give spec_ex_t equal total time \nsimulation.Another example can happen mainland extinction \nsingleton lineage underwent speciation.","code":"\nset.seed(\n  1,\n  kind = \"Mersenne-Twister\",\n  normal.kind = \"Inversion\",\n  sample.kind = \"Rejection\"\n)\nmainland <- DAISIEmainland:::sim_mainland(\n  total_time = 1,\n  m = 5,\n  mainland_ex = 1\n)\nmainland\n#> [[1]]\n#>   spec_id main_anc_id spec_type branch_code  branch_t spec_origin_t spec_ex_t\n#> 1       1           1         E           A       NaN     0.0000000 0.7579891\n#> 2      10           1         E          AA 0.7579891     0.7579891 0.9493026\n#> 3      11           1         C          AB 0.7579891     0.7579891 1.0000000\n#> 4      12           1         C         AAA 0.9493026     0.9493026 1.0000000\n#> 5      13           1         C         AAB 0.9493026     0.9493026 1.0000000\n#> \n#> [[2]]\n#>   spec_id main_anc_id spec_type branch_code  branch_t spec_origin_t spec_ex_t\n#> 1       2           2         E           A       NaN     0.0000000 0.1789954\n#> 2       8           2         C          AA 0.1789954     0.1789954 1.0000000\n#> 3       9           2         E          AB 0.1789954     0.1789954 0.7579891\n#> \n#> [[3]]\n#>   spec_id main_anc_id spec_type branch_code  branch_t spec_origin_t spec_ex_t\n#> 1       3           3         E           A       NaN     0.0000000 0.1510364\n#> 2       6           3         E          AA 0.1510364     0.1510364 0.9493026\n#> 3       7           3         C          AB 0.1510364     0.1510364 1.0000000\n#> \n#> [[4]]\n#>   spec_id main_anc_id spec_type branch_code branch_t spec_origin_t spec_ex_t\n#> 1       4           4         E           A      NaN             0 0.1510364\n#> \n#> [[5]]\n#>   spec_id main_anc_id spec_type branch_code branch_t spec_origin_t spec_ex_t\n#> 1       5           5         E           A      NaN             0 0.1789954\nmainland[[1]]\n#>   spec_id main_anc_id spec_type branch_code  branch_t spec_origin_t spec_ex_t\n#> 1       1           1         E           A       NaN     0.0000000 0.7579891\n#> 2      10           1         E          AA 0.7579891     0.7579891 0.9493026\n#> 3      11           1         C          AB 0.7579891     0.7579891 1.0000000\n#> 4      12           1         C         AAA 0.9493026     0.9493026 1.0000000\n#> 5      13           1         C         AAB 0.9493026     0.9493026 1.0000000\nmainland[[4]]\n#>   spec_id main_anc_id spec_type branch_code branch_t spec_origin_t spec_ex_t\n#> 1       4           4         E           A      NaN             0 0.1510364"},{"path":"simulation-algorithm.html","id":"island-simulation","chapter":"2 Simulation algorithm","heading":"2.2 Island simulation","text":"island simulation runs mainland simulation uses mainland\ndata determine species can immigrate island time. Doob-Gillespie algorithm altered accommodate dynamic\nmainland pool. time-steps bounded jump changes \nmainland ensure present state system (.e. species mainland)\nalways --date. algorithm checks whether changes occured \nmainland since last time step , system updated \nreturned time mainland last changed. valid owing \nMarkov (memoryless) property Doob-Gillespie algorithm.island simulation outputs island_tbl (see Section .2.6).\nisland_tbl includes species ID (spec_id), mainland ancestor\nID (main_anc_id), species type (spec_type), branching code (branch_code), branching time (branch_t). also includes time species\ncolonised island (col_t) reason species anagenetic (.e.\nendemic island without island clade). reasons \nspecies anagenetic : mainland population species goes\nextinct (mainland_extinction), species undergoes anagenesis island\n(immig_parent), species formed clade members \nclade went extinct present (clade_extinct).One major difference island mainland data produced \nsim_mainland() sim_island() latter \ninformation reconstructed point view. means extinct species\nremoved data set species extant end \nsimulation included.island mainland Doob-Gillespie algorithms time steps \nsampled exponential distribution rate:\\[X = \\lambda e ^{-\\lambda x}, \\text{ } \\lambda = \\sum_j r_j\\]\\(r_j\\) rates. mainland process just rate \nmainland extinction (\\(\\mu_M\\)), mainland parameter, whereas,\nisland algorithm \\(r_j\\) rates cladogenesis (\\(\\lambda^c\\)),\nisland extinction (\\(\\mu\\)), colonisation (\\(\\gamma\\)), anagenesis\n(\\(\\lambda^\\)). time step (\\(\\Delta\\) t) sampled, event sampled\ndynamic discrete probability distribution, weighted rate\n(propensity) relative rates:\\[r_i / \\sum_j r_j\\]system updated algorithm repeats time step exceeds\ntotal time simulation.function encapsulates runs simulations sim_island_with_mainland(). function also includes formatting data assignment endemicity status island colonist, needed DAISIE inference model. DAISIEmainland simulation outputs two data sets: (1) contains full information species colonisation times, (2) incomplete information data set resembles empiricist access (see Section .2.1). two data sets allow quantification error \nestimation empiricist access data.","code":"\nset.seed(\n  1,\n  kind = \"Mersenne-Twister\",\n  normal.kind = \"Inversion\",\n  sample.kind = \"Rejection\"\n)\nisland_tbl <- DAISIEmainland:::sim_island(\n  total_time = 1,\n  island_pars = c(1, 1, 10, 1, 1),\n  mainland_clade = mainland[[1]],\n  mainland_sample_prob = 1,\n  mainland_sample_type = \"complete\"\n)\nisland_tbl\n#>   spec_id main_anc_id     col_t spec_type branch_code branch_t          ana_origin\n#> 1       1           1 0.7551818         A        <NA>      NaN mainland_extinction\n#> 2      10          10 0.8507697         A        <NA>      NaN mainland_extinction\nset.seed(\n  1,\n  kind = \"Mersenne-Twister\",\n  normal.kind = \"Inversion\",\n  sample.kind = \"Rejection\"\n)\ndaisie_mainland_data <- sim_island_with_mainland(\n  total_time = 1,\n  m = 5,\n  island_pars = c(1, 1, 10, 1, 1), \n  mainland_ex = 1,\n  mainland_sample_prob = 1,\n  mainland_sample_type = \"unsampled\",\n  replicates = 1 \n)\ndaisie_mainland_data\n#> $ideal_multi_daisie_data\n#> $ideal_multi_daisie_data[[1]]\n#> $ideal_multi_daisie_data[[1]][[1]]\n#> $ideal_multi_daisie_data[[1]][[1]]$island_age\n#> [1] 1\n#> \n#> $ideal_multi_daisie_data[[1]][[1]]$not_present\n#> [1] 3\n#> \n#> \n#> $ideal_multi_daisie_data[[1]][[2]]\n#> $ideal_multi_daisie_data[[1]][[2]]$branching_times\n#> [1] 1.0000000 0.1026008\n#> \n#> $ideal_multi_daisie_data[[1]][[2]]$stac\n#> [1] 2\n#> \n#> $ideal_multi_daisie_data[[1]][[2]]$missing_species\n#> [1] 0\n#> \n#> \n#> $ideal_multi_daisie_data[[1]][[3]]\n#> $ideal_multi_daisie_data[[1]][[3]]$branching_times\n#> [1] 1.0000000 0.9627315\n#> \n#> $ideal_multi_daisie_data[[1]][[3]]$stac\n#> [1] 2\n#> \n#> $ideal_multi_daisie_data[[1]][[3]]$missing_species\n#> [1] 0\n#> \n#> \n#> \n#> \n#> $empirical_multi_daisie_data\n#> $empirical_multi_daisie_data[[1]]\n#> $empirical_multi_daisie_data[[1]][[1]]\n#> $empirical_multi_daisie_data[[1]][[1]]$island_age\n#> [1] 1\n#> \n#> $empirical_multi_daisie_data[[1]][[1]]$not_present\n#> [1] 3\n#> \n#> \n#> $empirical_multi_daisie_data[[1]][[2]]\n#> $empirical_multi_daisie_data[[1]][[2]]$branching_times\n#> [1] 1.0000000 0.8489636\n#> \n#> $empirical_multi_daisie_data[[1]][[2]]$stac\n#> [1] 2\n#> \n#> $empirical_multi_daisie_data[[1]][[2]]$missing_species\n#> [1] 0\n#> \n#> \n#> $empirical_multi_daisie_data[[1]][[3]]\n#> $empirical_multi_daisie_data[[1]][[3]]$branching_times\n#> [1] 1.00000 0.99999\n#> \n#> $empirical_multi_daisie_data[[1]][[3]]$stac\n#> [1] 5\n#> \n#> $empirical_multi_daisie_data[[1]][[3]]$missing_species\n#> [1] 0"},{"path":"simulation-data-visualisation.html","id":"simulation-data-visualisation","chapter":"3 Simulation data visualisation","heading":"3 Simulation data visualisation","text":"previous section (Section 2) showed data simulated. Another important aspect visualising data, DAISIEmainland selection plotting functions plot phylogenetic data mainland island.","code":""},{"path":"simulation-data-visualisation.html","id":"visualise-mainland","chapter":"3 Simulation data visualisation","heading":"3.1 Visualise mainland","text":"simulate mainland system Section 2.1 plot mainland clades using plot_mainland.plot shows evolutionary history mainland species \nstart simulation, five independent (.e. phylogenetic relatedness)\nmainland species, five extant species present. species given\nunique species ID shown different coloured branches. \ncolours can also changed represent clade species belongs .many clades mainland can difficult see plotted\nentire community. Instead individual mainland clades can selected \ndata plotted plot_mainland_clade. option plotting\nunique species ID clade ID available.","code":"\nset.seed(\n  1,\n  kind = \"Mersenne-Twister\",\n  normal.kind = \"Inversion\",\n  sample.kind = \"Rejection\"\n)\nmainland <- DAISIEmainland:::sim_mainland(\n  total_time = 1,\n  m = 5,\n  mainland_ex = 1\n)\nDAISIEmainland::plot_mainland(mainland)\nDAISIEmainland::plot_mainland(mainland, branch_colour = \"clade_id\")\nDAISIEmainland::plot_mainland_clade(\n  mainland_clade = mainland[[1]], \n  branch_colour = \"unique_species_id\"\n)\nDAISIEmainland::plot_mainland_clade(\n  mainland_clade = mainland[[1]], \n  branch_colour = \"clade_id\"\n)"},{"path":"simulation-data-visualisation.html","id":"visualise-island","chapter":"3 Simulation data visualisation","heading":"3.2 Visualise island","text":"set plotting functionality exists island data. \nsimulate range possible outcomes island data show \nlooks using function plot_daisie_data.empty islandAn island single non-endemic speciesAn island single endemic speciesAn island single non-endemic species whose colonisation time\nolder island age considered island-age maximum-age\ncolonisation (.e. colonised island age \ncolonised ). uncertainty timing colonisation taken\naccount data input DAISIE likelihood model.island single endemic species whose colonisation time\nolder island age considered island-age colonisation.\nuncertainty colonisation time handled equivalent\nway non-endemic island-age colonisation.island endemic clade whose colonisation time\nolder island age considered island-age colonisation.\nDAISIE colonisation time assumed occurred \nisland age first branching time clade.island recolonisation mainland species \ncolonised speciated (either via cladogenesis anagenesis island).\ncolonists ancestral mainland species island\nspecies now endemic show ‘Colonist anagenesis’ ‘Colonist\ncladogenesis.’scenarios one daisie_data sets produced\nsim_island_with_mainland() function produces ideal_data\nempirical_data. plot_daisie_mainland_data plots two island data\nsets together.plot juxtaposing ideal_data (top) empirical_data (bottom)\nclear colonisation times differ one island colonists.\nempirical_data colonist island-age colonist likely\ndue effects mainland dynamics shifting empiricist’s perception \ncolonisation time.","code":"#> $ideal_multi_daisie_data\n#> $ideal_multi_daisie_data[[1]]\n#> $ideal_multi_daisie_data[[1]][[1]]\n#> $ideal_multi_daisie_data[[1]][[1]]$island_age\n#> [1] 1\n#> \n#> $ideal_multi_daisie_data[[1]][[1]]$not_present\n#> [1] 3\n#> \n#> \n#> $ideal_multi_daisie_data[[1]][[2]]\n#> $ideal_multi_daisie_data[[1]][[2]]$branching_times\n#> [1] 1.0000000 0.1026008\n#> \n#> $ideal_multi_daisie_data[[1]][[2]]$stac\n#> [1] 2\n#> \n#> $ideal_multi_daisie_data[[1]][[2]]$missing_species\n#> [1] 0\n#> \n#> \n#> $ideal_multi_daisie_data[[1]][[3]]\n#> $ideal_multi_daisie_data[[1]][[3]]$branching_times\n#> [1] 1.0000000 0.9627315\n#> \n#> $ideal_multi_daisie_data[[1]][[3]]$stac\n#> [1] 2\n#> \n#> $ideal_multi_daisie_data[[1]][[3]]$missing_species\n#> [1] 0\n#> \n#> \n#> \n#> \n#> $empirical_multi_daisie_data\n#> $empirical_multi_daisie_data[[1]]\n#> $empirical_multi_daisie_data[[1]][[1]]\n#> $empirical_multi_daisie_data[[1]][[1]]$island_age\n#> [1] 1\n#> \n#> $empirical_multi_daisie_data[[1]][[1]]$not_present\n#> [1] 3\n#> \n#> \n#> $empirical_multi_daisie_data[[1]][[2]]\n#> $empirical_multi_daisie_data[[1]][[2]]$branching_times\n#> [1] 1.0000000 0.8489636\n#> \n#> $empirical_multi_daisie_data[[1]][[2]]$stac\n#> [1] 2\n#> \n#> $empirical_multi_daisie_data[[1]][[2]]$missing_species\n#> [1] 0\n#> \n#> \n#> $empirical_multi_daisie_data[[1]][[3]]\n#> $empirical_multi_daisie_data[[1]][[3]]$branching_times\n#> [1] 1.00000 0.99999\n#> \n#> $empirical_multi_daisie_data[[1]][[3]]$stac\n#> [1] 5\n#> \n#> $empirical_multi_daisie_data[[1]][[3]]$missing_species\n#> [1] 0"},{"path":"inference-performance.html","id":"inference-performance","chapter":"4 Inference performance","heading":"4 Inference performance","text":"One primary purposes DAISIEmainland package specifically\ndata formatted DAISIE format test maximum\nlikelihood inference models implemented DAISIE R package (Etienne et al. 2022). Therefore, section explore conduct \nsimple performance analysis one DAISIE models. case \ngoing use model single macroevolutionary regime island (\n.e. island species assumed rate colonisation,\nspeciation extinction, well carrying capacity). model\nalso assumes carrying capacity operates species within \nisland clade (termed clade-specific diversity-dependence), thus different\nisland colonists supposed independent inhibiting diversification\n.small technical aside, section uses DAISIE version 4.1.1. Re-running\ncode another system may produce different results, especially \ndifferent version DAISIE installed.","code":""},{"path":"inference-performance.html","id":"simulating-data","chapter":"4 Inference performance","heading":"4.1 Simulating data","text":"First, simulate 100 replicates island data. produce phylogenetic data 100 islands parameter values. reason multiple island\ndata sets simulated simualation algorithm stochastic (Section 2) iterating simulation many times\naccounts differences data sets due stochasticity. analysis replicates (e.g. 1,000) can run account stochastic differences replicates thoroughly sample distribution possible simulation outcomes.Note: code takes substantial amount time run (order\nhours 100 replicates).Now simulated data, stored daisie_mainland_data (see section .2.1), list object.\nhighest level list two lists:\ndaisie_mainland_data$ideal_multi_daisie_data \ndaisie_mainland_data$empirical_multi_daisie_data. multi_daisie_data lists contains 100 elements, one simulation replicate. daisie_mainland_data$ideal_multi_daisie_data daisie_mainland_data$empirical_multi_daisie_data structure.\nfirst element meta data, containing: island_age \nnumber species not_present island mainland.Subsequent elements list island clades composed :\nbranching_times, status colonisation stac, number \nmissing_species. branching_times contains age island, \ntime colonisation subsequent cladogenetic speciation times. stac\nnumeric identifier endemicicity status cladogenetic status (.e. island colonist singleton lineage clade). Lastly, missing_species number species known island clade \nincluded branching_times vector phylogenetic information\ntiming speciation species. DAISIEmainland simulation\nassume phylogenetic information species island thus missing_species always set zero.","code":"\nset.seed(\n  1,\n  kind = \"Mersenne-Twister\",\n  normal.kind = \"Inversion\",\n  sample.kind = \"Rejection\"\n)\n\nreplicates <- 100\n\ndaisie_mainland_data <- DAISIEmainland::sim_island_with_mainland(\n  total_time = 1,\n  m = 100,\n  island_pars = c(0.5, 02.5, 50, 0.01, 0.5),\n  mainland_ex = 1.0,\n  mainland_sample_prob = 1,\n  mainland_sample_type = \"complete\",\n  replicates = replicates,\n  verbose = FALSE\n)\ndaisie_mainland_data$ideal_multi_daisie_data[[1]][[1]]\n#> $island_age\n#> [1] 5\n#> \n#> $not_present\n#> [1] 959\ndaisie_mainland_data$empirical_multi_daisie_data[[1]][[1]]\n#> $island_age\n#> [1] 5\n#> \n#> $not_present\n#> [1] 959\ndaisie_mainland_data$ideal_multi_daisie_data[[1]][[2]]\n#> $branching_times\n#> [1] 5.0000000 4.1284128 0.1607578\n#> \n#> $stac\n#> [1] 2\n#> \n#> $missing_species\n#> [1] 0\ndaisie_mainland_data$empirical_multi_daisie_data[[1]][[2]]\n#> $branching_times\n#> [1] 5.0000000 4.1284128 0.1607578\n#> \n#> $stac\n#> [1] 2\n#> \n#> $missing_species\n#> [1] 0"},{"path":"inference-performance.html","id":"maximum-likelihood-inference","chapter":"4 Inference performance","heading":"4.2 Maximum likelihood inference","text":"run maximum likelihood DAISIE model, using DAISIE_ML_CS() function, replicate create objects store data (ideal_ml empirical_ml) loop replicate.details maximum likelihood set important, brief explainer: model parameters optimisied starting position parameter space optimisation, equal values used simulate data; Runge-Kutta Fehlberg method used numerically solve likelihood equations; simplex optimisation algorithm maximise likelihood.","code":"\nideal_ml <- vector(\"list\", replicates)\nempirical_ml <- vector(\"list\", replicates)\n\nfor (i in seq_len(replicates)) {\n  ideal_ml[[i]] <- DAISIE::DAISIE_ML_CS(\n    datalist = daisie_mainland_data$ideal_multi_daisie_data[[i]],\n    initparsopt = c(0.5, 02.5, 50, 0.01, 0.5),\n    idparsopt = 1:5,\n    parsfix = NULL,\n    idparsfix = NULL,\n    ddmodel = 11,\n    methode = \"odeint::runge_kutta_fehlberg78\",\n    optimmethod = \"simplex\",\n    jitter = 1e-5)\n  \n  empirical_ml[[i]] <- DAISIE::DAISIE_ML_CS(\n    datalist = daisie_mainland_data$empirical_multi_daisie_data[[i]],\n    initparsopt = c(0.5, 02.5, 50, 0.01, 0.5),\n    idparsopt = 1:5,\n    parsfix = NULL,\n    idparsfix = NULL,\n    ddmodel = 11,\n    methode = \"odeint::runge_kutta_fehlberg78\",\n    optimmethod = \"simplex\",\n    jitter = 1e-5)\n}"},{"path":"inference-performance.html","id":"inference-performance-error-metrics","chapter":"4 Inference performance","heading":"4.3 Inference performance error metrics","text":"Now simulated 100 data sets, ideal empirical data\nset, fitted DAISIE model , need quantify error DAISIE inference makes include mainland evolutionary dynamics.error metrics chosen quantify :difference parameter estimates ideal empirical\ndata, cladogenesis, extinction, carrying capacity, colonisation, \nanagenesis. can calculated ideal estimate minus empirical\nestimate, ideal estimate divided empirical estimate.Delta CTT (\\(\\Delta\\)CTT) (difference colonisations time) \nideal empirical data. Calculated :\\[ \\Delta nCTT = \\int_{0}^{1} | nCTT_{ideal}(t) - nCTT_{empirical}(t) | dt \\]Percentage maximum island age colonisations (.e. colonisations \nrecent colonisation time extracted phylogenetic data older\nisland) ideal empirical data (including colonisations survive present). ideal max age percentage always zero always known exactly species colonised island, still calculated check zero. empirical max age percent can \npercent [0, 100].Percent endemic species present. includes counts \nnumber endemic non-endemic species ideal empirical data, \nwell calculation percentage endemic species data set.Overall, error metrics can computed using calc_error() simulated data maximum likelihood estimates.code displayed chapter simplified version script used\ncarry full inference performance analysis can found .","code":"\nerror_metrics$param_diffs\n#> $clado_diffs\n#>   [1]  0.0485671213  0.1373335180  0.1235759403  0.0953859594  0.1358954310  0.0866802387  0.1325293598  0.0040849011\n#>   [9]  0.1258097861  0.1183624223  0.0209520854  0.0067349700  0.1405136758  0.0159262995  0.0332742438  0.0652122543\n#>  [17]  0.0757534327  0.0703789053  0.0638534672  0.1123253518  0.0387860642  0.1389811329  0.0489951561  0.0057499664\n#>  [25]  0.0982333242  0.0222870658  0.0925295642  0.0670060346  0.0241730403  0.0736598720  0.0939902206  0.0832876704\n#>  [33]  0.0952014091  0.1183953843  0.0333036319  0.0788275212  0.0652345805  0.1196498887  0.0075744193  0.0007002778\n#>  [41]  0.0565057260  0.1559784446  0.1600979463  0.0598963000  0.0778151524  0.0027668697  0.0596032902  0.1066499937\n#>  [49] -0.0052408873  0.0855404107  0.1873826787  0.1366268656  0.0247300013  0.1278115324  0.1110532752  0.1702827555\n#>  [57]  0.0580207482 -0.0269455300  0.1388745854  0.1932200372 -0.0484186886  0.1117052217  0.1250062565  0.0992634319\n#>  [65]  0.0287133793  0.0731280890  0.1348903390  0.0948763814  0.0660694034  0.1196880994  0.2336268190  0.1672059897\n#>  [73]  0.1535245336  0.0468435173  0.1429627692  0.2474280851  0.0520964225  0.0617982639  0.1516189004  0.0141226232\n#>  [81]  0.0010783260  0.0519716199  0.0967431949  0.0659618055  0.0903201873  0.0977781642  0.0218629018 -0.0450911852\n#>  [89]  0.0818354966  0.1339237117  0.2632617046  0.0381733346  0.0814707184  0.0771590033  0.0110410705  0.1906785193\n#>  [97]  0.0557903264  0.0962286193 -0.0255369899 -0.0308531267\n#> \n#> $ext_diffs\n#>   [1]  6.857364e-02  1.097038e-01  1.125931e-01  4.725620e-02  5.632513e-02  1.481105e-01  2.000310e-01  6.071199e-02\n#>   [9]  1.096539e-01  1.181260e-01  2.499557e-02  5.500459e-05  7.427308e-02  1.437063e-02  8.446332e-02  9.517239e-02\n#>  [17]  1.764619e-01  1.127467e-01  6.058841e-02  8.199032e-02  4.615333e-02  1.056925e-01  1.125869e-01 -1.008727e-02\n#>  [25]  9.737776e-02 -2.615180e-04  1.743287e-01  5.330404e-02  4.899761e-02  9.500368e-02  8.581763e-02  1.516548e-01\n#>  [33]  1.404316e-01  1.459737e-01  7.720799e-02  1.257149e-01  9.721214e-02  7.475331e-02  1.620405e-02  2.231194e-04\n#>  [41]  7.279873e-02  2.125234e-01  8.736661e-02 -5.667143e-06  4.749765e-02 -1.409081e-06  5.133049e-02  3.874742e-02\n#>  [49] -1.146016e-02  1.087732e-01  1.769580e-01  8.652160e-02  4.636389e-02  1.202245e-01  1.293976e-01  1.215278e-01\n#>  [57]  1.481257e-01  7.206466e-02  1.060878e-01  2.002648e-01 -6.393059e-03  1.226918e-01  1.788540e-01  1.217913e-01\n#>  [65]  7.357735e-02  2.976577e-02  9.688404e-02  1.605063e-01  7.182201e-02  1.564635e-01  4.096875e-01  1.796573e-01\n#>  [73]  1.716357e-01  2.250669e-02  1.071613e-01  2.330795e-01  9.216332e-02  1.279147e-01  2.238795e-01  6.356713e-02\n#>  [81] -1.060943e-03  8.552440e-02  8.791171e-02  9.672859e-02  6.732924e-02  1.122435e-01  3.596650e-02 -3.778419e-02\n#>  [89]  9.899419e-02  1.151449e-01  2.101046e-01  7.911586e-02  8.636993e-02  8.483219e-02  1.101010e-02  1.686426e-01\n#>  [97]  4.570608e-02  8.918716e-02 -2.143301e-14  1.022372e-02\n#> \n#> $k_diffs\n#>   [1] -3.496213e-01 -1.760964e+00 -1.980145e-01 -4.525308e+00 -9.302610e+00  2.516986e-01          -Inf  1.100309e+00\n#>   [9] -1.233321e-01 -1.451193e+00 -1.599502e+00 -4.807013e-02 -9.729760e-01 -1.184472e-02  6.068851e-01  2.209808e-01\n#>  [17]           NaN  6.177416e-01 -1.283903e+00 -4.505470e-01  4.851449e-01  2.297718e-12           NaN -3.803513e-01\n#>  [25] -1.129781e+00 -8.420514e-01           NaN -1.381843e-01  2.834243e-01 -1.263562e+01 -1.635090e+00           NaN\n#>  [33]  2.079064e+00  5.580890e-01           NaN -1.341703e+00 -4.896262e+00 -1.127207e+00  7.736603e-01 -1.732510e-01\n#>  [41] -3.770729e+00 -8.429657e+01 -2.515503e-01 -4.328450e+00 -2.366657e+00           NaN -6.352045e+00 -3.229599e-01\n#>  [49]           NaN  8.838242e-01 -7.992154e+01 -1.273254e+00           NaN -4.879011e+00 -7.461650e+00 -1.068268e+01\n#>  [57]           NaN  1.432933e+00 -1.462462e+00 -2.422899e+01  1.705262e+01          -Inf -4.951696e-01 -1.550811e+01\n#>  [65]  8.432118e-01 -1.233582e-08 -8.160294e-01  6.544387e-01 -1.057907e+00 -1.546564e+00 -5.643018e+00  3.700340e-02\n#>  [73] -7.188337e+00 -2.843850e+00 -2.659184e-01 -1.508660e+00  1.412603e+00           NaN          -Inf  4.060781e-01\n#>  [81] -1.932961e-01  7.244419e-02 -1.481494e-01           NaN  7.736034e-11 -2.658060e+00  4.513234e-02  2.207231e+00\n#>  [89]          -Inf -9.670351e+01 -6.814340e+00 -2.393552e+00 -7.651993e-01 -7.558605e-01  2.966476e-02 -9.004889e+00\n#>  [97] -2.705575e+00 -7.597101e+00  5.761140e+01  1.930309e+00\n#> \n#> $immig_diffs\n#>   [1]  1.042022e-03  9.743975e-04  1.516408e-03  3.551594e-04  8.390961e-04  2.057175e-03  2.227582e-03  1.452176e-03\n#>   [9]  1.008419e-03  1.327859e-03  3.412082e-04 -1.278710e-05  8.116564e-04  4.464987e-04  7.378906e-04  1.358666e-03\n#>  [17]  3.348057e-03  1.454142e-03  1.077728e-03  6.188365e-04  7.090332e-04  9.048389e-04  1.994647e-03 -7.993683e-05\n#>  [25]  1.063019e-03  1.821143e-05  1.938671e-03  4.111066e-04  5.295924e-04  9.949653e-04  6.655333e-04  2.129320e-03\n#>  [33]  2.071309e-03  1.653417e-03  1.351098e-03  1.418462e-03  1.804811e-03  5.124829e-04  2.020163e-04  2.116319e-04\n#>  [41]  1.416318e-03  2.782163e-03  7.752967e-04  2.087575e-04  2.787000e-04  1.919504e-04  6.559712e-04  1.238442e-04\n#>  [49]  3.287926e-04  2.182717e-03  1.405726e-03  9.459177e-04  1.059625e-03  1.269979e-03  2.098623e-03  1.232630e-03\n#>  [57]  1.161765e-03  1.645384e-03  1.440077e-03  1.610687e-03  3.843102e-04  1.502280e-03  2.127733e-03  1.308060e-03\n#>  [65]  8.659956e-04  1.140500e-04  6.868319e-04  3.183439e-03  9.367026e-04  3.353336e-03  4.175519e-03  1.126795e-03\n#>  [73]  2.030753e-03  2.275020e-04  1.187243e-03  2.105562e-03  1.559709e-03  1.728874e-03  3.312228e-03  5.882417e-04\n#>  [81]  2.399429e-04  1.018908e-03  1.061724e-03  1.101474e-03  7.102028e-04  1.449428e-03  3.926257e-04 -4.089808e-04\n#>  [89]  1.280796e-03  1.236879e-03  2.200531e-03  8.608049e-04  6.789350e-04  9.925445e-04  1.585696e-04  2.272000e-03\n#>  [97]  4.468965e-04  7.226488e-04  1.442125e-04  5.610867e-04\n#> \n#> $ana_diffs\n#>   [1]  -2.81502418  -0.30755024  -8.83992684  -0.09823236  -6.37998771  -2.00149632  -0.52255434  -0.18900595\n#>   [9]  -1.44201732  -1.36502610  -1.11886027  -0.40458206  -0.35338120  -1.71542320  -1.70200338  -2.03288606\n#>  [17]  -4.98153156  -0.92630285  -1.49863569  -3.16133662  -0.22306379   1.16501822  -0.45087136 -99.23345781\n#>  [25]  -0.42568490  -1.47454122  -1.82309850  -0.77802340  -2.74982881 -99.19490151  -0.43635432  -1.35225428\n#>  [33]  -0.21317802  -1.95643284  -0.60724162  -3.01877683  -0.47780628  -1.26597480  -5.01345786  -0.86483660\n#>  [41]  -1.86608664  -3.62904156  -0.75516449 -96.88273322  -2.68596835  -0.17875030  -1.17023276  -0.55650869\n#>  [49]  -2.61311465  -1.19975469   0.51695521  -0.89282807  -7.03008622  -0.69367270  -0.89192587  -3.80878377\n#>  [57]  -2.15111646  -1.22599348  -2.70004090  -0.71966370 -98.06618339  -0.70533170  -3.46826307  -1.27895765\n#>  [65]  -0.76310280  -3.41426901  -0.12162699  -1.54694995  -1.27817247  -0.53709200  -2.17232671  -1.29543112\n#>  [73] -98.25615324   0.00000000  -1.19148035  -7.23074816  -0.91334813  -3.80968955  -0.79059622  -2.96121375\n#>  [81]  -1.56570253  -0.83990984  -0.21666682  -0.79426705  -0.35740054  -1.04115133  -0.42769514  -8.44618955\n#>  [89]  -2.13413452  -1.56313291  -3.61881486  -1.55017243  -0.15521925  -0.73067508  -0.86176702  -2.91392867\n#>  [97]  -2.24233168  -3.03266562 -98.50940645  -0.69419471\nerror_metrics$param_ratios\n#> $clado_ratio\n#>   [1] 1.1019247 1.2645962 1.2315766 1.2231733 1.2038794 1.0732537 1.3283457 1.0063321 1.1697543 1.1794265 1.0285701\n#>  [12] 1.0138593 1.2180917 1.0233796 1.0619812 1.0821268 1.1856363 1.1443566 1.1089589 1.2182676 1.0394481 1.2455419\n#>  [23] 1.1203024 1.0098534 1.1873124 1.0489651 1.2447870 1.0815000 1.0697073 1.1462584 1.1552739 1.1476469 1.1287327\n#>  [34] 1.2280786 1.1002011 1.1743800 1.1101595 1.1488195 1.0114636 1.0012274 1.1347616 1.3979466 1.2114707 1.1029518\n#>  [45] 1.1204869 1.0084438 1.1184261 1.1015717 0.9840621 1.1006664 1.3545575 1.1875476 1.0504432 1.2547194 1.1935862\n#>  [56] 1.4246978 1.1300556 0.9609090 1.2241886 1.4629485 0.9149940 1.2652098 1.2217370 1.2170709 1.0486845 1.0753999\n#>  [67] 1.2160452 1.1810725 1.0999879 1.2034898 1.5353281 1.2518833 1.2277219 1.1006048 1.1769789 1.4717583 1.0787394\n#>  [78] 1.1547868 1.3423970 1.0253501 1.0020710 1.0908377 1.1745615 1.1009075 1.0931471 1.2598514 1.0391368 0.9447405\n#>  [89] 1.1730173 1.2679206 1.4787505 1.1022435 1.0988597 1.1309307 1.0173436 1.6469116 1.1401073 1.2004272 0.9430654\n#> [100] 0.9487790\n#> \n#> $ext_ratio\n#>   [1] 4.368896e+10 2.247107e+00 2.307965e+00 1.559733e+00 1.107176e+00 1.276581e+00 1.014503e+01 1.190183e+00\n#>   [9] 1.236633e+00 1.708440e+00 1.049173e+00 9.870138e+09 1.286894e+00 1.056265e+00 2.337184e+00 1.288329e+00\n#>  [17] 2.402821e+00 2.431660e+11 1.556109e+00 2.922531e+00 1.093333e+00 1.703661e+00 2.258062e+00 9.372024e-01\n#>  [25] 2.317361e+00 1.108920e-09 5.176414e+00 1.208487e+00 1.775872e+11 1.333426e+00 1.929799e+00 1.384392e+00\n#>  [33] 1.273000e+00 8.429728e+11 3.511354e+01 6.917127e+12 1.362813e+00 1.197913e+00 1.040595e+00 2.780516e+09\n#>  [41] 2.278822e+00 4.860388e+00 1.314793e+00 1.507218e-07 1.123221e+00 1.732810e-04 5.036783e+00 1.086917e+00\n#>  [49] 3.591096e-09 1.240306e+00 2.170009e+00 1.414762e+00 1.172721e+00 1.534977e+00 1.506628e+00 1.702878e+12\n#>  [57] 2.200715e+06 1.273985e+00 1.397770e+00 3.674563e+11 9.818634e-01 2.482082e+00 2.475970e+00 1.476402e+00\n#>  [65] 1.853170e+00 1.051781e+00 1.447594e+00 2.914421e+00 1.210774e+00 1.676642e+00 1.115805e+12 2.550256e+00\n#>  [73] 2.148906e+00 2.686589e+11 1.223887e+00 8.296050e+00 1.230673e+00 1.546809e+00 2.641143e+00 6.002974e+00\n#>  [81] 9.922770e-01 1.407970e+00 1.469073e+00 1.183168e+00 1.098108e+00 5.625863e+11 1.495995e+00 9.310646e-01\n#>  [89] 1.401439e+00 1.627062e+00 1.861633e+00 3.318195e+00 1.155149e+00 1.599951e+00 1.029143e+00 5.342523e+02\n#>  [97] 1.289240e+00 9.089077e+10 8.081950e-01 1.031266e+00\n#> \n#> $k_ratio\n#>   [1] 0.9759979 0.8851219 0.9728497 0.7712869 0.5355142 1.0226588 0.0000000 1.0990068 0.9865571 0.9109885 0.9512656\n#>  [12] 0.9935885 0.9054963 0.9988169 1.0279555 1.0129938       NaN 1.0350560 0.9485566 0.9528544 1.0554575 1.0000000\n#>  [23]       NaN 0.9764286 0.9188533 0.9353091       NaN 0.9892863 1.0062481 0.7622975 0.9332112       NaN 1.0863003\n#>  [34] 1.0569779       NaN 0.9592238 0.7443303 0.9275784 1.0044091 0.9850291 0.8670505 0.2003501 0.9624100 0.7570835\n#>  [45] 0.8976065       NaN 0.7193965 0.9673533       NaN 1.0477054 0.2590141 0.9277677       NaN 0.7516033 0.8196856\n#>  [56] 0.4771808       NaN 1.1933501 0.8689615 0.4057954 1.6938724 0.0000000 0.9740698 0.7017777 1.0594442 1.0000000\n#>  [67] 0.9296927 1.0381618 0.9322491 0.8580620 0.8047749 1.0057703 0.8028354 0.8646753 0.9716147 0.8642064 1.1147170\n#>  [78]       NaN 0.0000000 1.0423507 0.9884308 1.0049769 0.9792744       NaN 1.0000000 0.8869874 1.0031085 1.1403730\n#>  [89] 0.0000000 0.2914180 0.6367512 0.9233759 0.9688190 0.9604435 1.0037081 0.4508025 0.8505793 0.8283872 2.7275012\n#> [100] 1.1199524\n#> \n#> $immig_ratio\n#>   [1] 1.1208684 1.1310031 1.1766406 1.0559947 1.0772917 1.2234355 1.3374036 1.1459946 1.1009760 1.1295151 1.0260638\n#>  [12] 0.9980173 1.0632580 1.0440015 1.1134424 1.1277152 1.3252620 1.1856656 1.1237274 1.1039668 1.0770954 1.1308119\n#>  [23] 1.2249763 0.9904184 1.1232711 1.0020259 1.2684106 1.0485719 1.0801134 1.1164359 1.0957965 1.1775955 1.1756976\n#>  [34] 1.2752436 1.1865987 1.2149293 1.1875892 1.0541904 1.0216487 1.0263911 1.1585339 1.4006457 1.0764068 1.0316560\n#>  [45] 1.0359661 1.0329992 1.1005446 1.0141781 1.0407157 1.1957650 1.2522359 1.1036875 1.0876331 1.1412202 1.1719301\n#>  [56] 1.1762298 1.2147905 1.1678468 1.1418940 1.2869597 1.0431875 1.1668380 1.2605257 1.1514541 1.1293670 1.0095504\n#>  [67] 1.0965260 1.3232910 1.0768819 1.2804492 1.7252252 1.2209662 1.2143799 1.0299591 1.0903716 1.4030301 1.1376007\n#>  [78] 1.2261965 1.3912836 1.0873358 1.0255434 1.1489269 1.1073064 1.0960557 1.0466218 1.1948394 1.0457636 0.9706315\n#>  [89] 1.1571197 1.1306892 1.2649934 1.1235443 1.0727404 1.0992527 1.0136102 1.3161109 1.0606378 1.1164211 1.0240545\n#> [100] 1.0525936\n#> \n#> $ana_ratio\n#>   [1] 3.829679e-01 6.522835e-01 1.790843e-01 9.374789e-01 1.190392e-01 1.762753e-12 6.893415e-01 9.064945e-01\n#>   [9] 5.902257e-01 4.327097e-01 4.262540e-01 8.078228e-01 8.935561e-01 2.963010e-01 3.135234e-01 5.913718e-01\n#>  [17] 2.275231e-01 5.626318e-01 4.892840e-01 3.868135e-01 8.233284e-01 1.092117e+00 7.145972e-01 7.665422e-03\n#>  [25] 6.638959e-01 4.290807e-01 3.756175e-01 3.982345e-01 2.519282e-01 8.050985e-03 4.186570e-01 6.632527e-01\n#>  [33] 8.996221e-01 6.134037e-01 6.326801e-01 2.487922e-01 7.171181e-01 7.698045e-01 1.092587e-01 6.496507e-01\n#>  [41] 2.398907e-01 2.561441e-01 7.063178e-01 3.117267e-02 2.706573e-01 8.655616e-01 4.837991e-01 8.691849e-01\n#>  [49] 3.598866e-01 5.850882e-01 1.212092e+00 5.966360e-01 1.227338e-01 5.924129e-01 3.800267e-01 3.010002e-01\n#>  [57] 2.570959e-01 4.042118e-01 2.361965e-01 5.289609e-01 1.933817e-02 5.594226e-01 3.991974e-01 2.454061e-01\n#>  [65] 7.476550e-01 2.341141e-01 9.144005e-01 6.326505e-01 6.258742e-01 6.829908e-01 5.093517e-01 6.669009e-01\n#>  [73] 1.743847e-02 1.000000e+00 2.761089e-01 2.276879e-01 5.536222e-01 2.310265e-01 5.404810e-01 2.352762e-01\n#>  [81] 3.998440e-01 7.150560e-01 8.971522e-01 6.044293e-01 7.463653e-01 5.568244e-01 8.181816e-01 9.041582e-02\n#>  [89] 5.485972e-01 3.040310e-01 1.567141e-01 4.059717e-01 7.918612e-01 5.667673e-01 3.742646e-01 5.592775e-01\n#>  [97] 2.653516e-01 2.743024e-01 1.490594e-02 8.185683e-01\nerror_metrics$delta_ctt\n#>   [1] 0.17155232 0.11695078 0.14791992 0.07678659 0.14403409 0.14486446 0.12221146 0.11226794 0.04766100 0.12277885\n#>  [11] 0.07824080 0.12537940 0.17947178 0.09771132 0.10608182 0.09426436 0.11128204 0.08052833 0.14026127 0.15026305\n#>  [21] 0.08950161 0.16149038 0.06570476 0.10174456 0.11555421 0.12137929 0.12067028 0.09847416 0.11214094 0.12464379\n#>  [31] 0.10306867 0.13009035 0.12464288 0.15585429 0.17651730 0.14776988 0.12273101 0.09836984 0.14499881 0.15081492\n#>  [41] 0.13135130 0.16710886 0.13547439 0.15243449 0.13594079 0.12404993 0.07058998 0.08583650 0.09308716 0.14313386\n#>  [51] 0.05876224 0.16236322 0.11175274 0.09712582 0.12472783 0.13606670 0.15919436 0.11084444 0.10562117 0.08244299\n#>  [61] 0.12169974 0.14242685 0.18316439 0.06892195 0.11628010 0.11634245 0.16297475 0.16968625 0.05038661 0.08744617\n#>  [71] 0.20206509 0.07073775 0.12597444 0.07686876 0.07693023 0.13157247 0.15216802 0.14162742 0.12711394 0.07499071\n#>  [81] 0.09835805 0.11799740 0.10644828 0.13006720 0.08739035 0.13488771 0.08041684 0.11975591 0.16024984 0.16527204\n#>  [91] 0.20883705 0.11701884 0.08961436 0.10196080 0.12944348 0.17224067 0.16286731 0.10224647 0.11633248 0.09333321\nerror_metrics$max_age_percent\n#> $ideal_max_age\n#>   [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n#>  [58] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n#> \n#> $empirical_max_age\n#>   [1] 34.883721 24.242424 28.947368 10.714286 21.428571 32.142857 28.125000 24.242424 14.285714 30.952381 19.444444\n#>  [12] 34.375000 26.086957 24.324324 36.666667 21.621622 20.930233 28.205128 18.421053 25.000000 18.518519 28.571429\n#>  [23] 23.076923 23.529412 38.461538 33.333333 23.529412 21.875000 30.303030 31.034483 29.032258 27.777778 18.750000\n#>  [34] 23.333333 38.888889 33.333333 26.470588 22.580645 34.482759 35.000000 21.951220 34.375000 30.555556 36.363636\n#>  [45] 20.833333 34.482759 25.000000 14.285714 20.000000 17.647059  8.695652 27.777778 21.428571 18.181818 25.000000\n#>  [56] 37.142857 51.851852 28.571429 25.000000 28.571429 21.428571 27.500000 48.571429 13.333333 30.000000 18.750000\n#>  [67] 29.629630 38.636364 17.500000 20.454545 37.931034 27.272727 27.500000 21.052632 18.918919 32.000000 23.529412\n#>  [78] 22.222222 34.285714 39.393939 20.512821 30.769231 23.684211 20.000000 14.285714 24.324324 23.076923 21.621622\n#>  [89] 20.689655 27.027027 23.333333 36.363636 28.000000 28.571429 28.571429 25.000000 31.034483 22.580645 26.666667\n#> [100] 28.571429\nerror_metrics$endemic_percent\n#> $ideal_endemic_percent\n#>   [1]  96.66667  92.55319  95.50562  94.73684  95.23810  97.80220  93.54839  98.76543  93.10345  95.55556  88.42105\n#>  [12]  94.87179  97.45763  92.47312  94.84536  96.52174  94.49541  97.65625  97.88732  95.89041  94.36620  98.18182\n#>  [23]  94.49541  97.05882  95.12195  97.01493  93.54839  92.23301  92.68293  97.26027  96.80000  94.50549  96.38554\n#>  [34]  98.82353  94.00000  97.19626  95.45455  98.93617  96.84211  97.10145  93.10345  96.62921  96.51163  99.15966\n#>  [45]  93.33333  95.18072  95.14563  97.70115  96.22642  97.36842  97.22222  96.99248  96.46018  95.00000  93.89313\n#>  [56]  96.73913  94.73684  93.82716  94.50549  92.40506  98.48485  96.66667  96.26168  91.30435  96.70330  96.25000\n#>  [67]  95.77465  99.27536  98.01980  89.89899  96.15385  96.15385  98.84393 100.00000  87.95181  97.36842  94.87179\n#>  [78]  91.52542  93.61702  97.95918  92.30769  95.58824  93.82716  95.00000  89.18919  92.55319  96.46018  94.79167\n#>  [89]  96.05263  94.69027  93.58974  94.11765  88.05970  95.12195  91.42857  95.89041  93.65079  96.85039  99.04762\n#> [100]  96.47059\n#> \n#> $empirical_endemic_percent\n#>   [1]  97.50000  92.55319  98.87640  94.73684  96.82540  97.80220  94.62366  98.76543  96.55172  97.03704  90.52632\n#>  [12]  94.87179  97.45763  95.69892  96.90722  97.39130  98.16514  97.65625  98.59155  97.26027  94.36620  98.18182\n#>  [23]  95.41284 100.00000  95.12195  97.76119  96.77419  93.20388  96.34146 100.00000  96.80000  95.60440  96.38554\n#>  [34]  98.82353  95.00000  99.06542  95.45455  98.93617  98.94737  97.10145  96.55172  97.75281  96.51163 100.00000\n#>  [45]  96.66667  95.18072  97.08738  97.70115  98.11321  98.24561  97.22222  97.74436 100.00000  96.25000  96.18321\n#>  [56]  97.82609  95.78947  97.53086  96.70330  93.67089 100.00000  98.33333  97.19626  95.65217  96.70330  98.75000\n#>  [67]  95.77465  99.27536  99.00990  90.90909  97.43590  96.15385 100.00000 100.00000  92.77108  98.68421  96.15385\n#>  [78]  96.61017  95.74468  98.97959  94.23077  95.58824  93.82716  96.25000  90.54054  95.74468  96.46018  97.91667\n#>  [89]  97.36842  97.34513  97.43590  95.29412  88.05970  95.93496  94.28571  97.26027  96.82540  97.63780 100.00000\n#> [100]  96.47059\n#> \n#> $ideal_endemics\n#>   [1] 116  87  85  72  60  89  87  80  54 129  84  74 115  86  92 111 103 125 139  70  67  54 103  99 117 130  87  95\n#>  [29]  76  71 121  86  80  84  94 104  84  93  92 134 108  86  83 118  56  79  98  85 102 111  70 129 109  76 123  89\n#>  [57]  90  76  86  73  65 116 103  63  88  77  68 137  99  89  75  50 171 125  73  74  74  54  88  96  96  65  76  76\n#>  [85]  66  87 109  91  73 107  73  80  59 117  64  70  59 123 104  82\n#> \n#> $ideal_non_endemics\n#>   [1]  4  7  4  4  3  2  6  1  4  6 11  4  3  7  5  4  6  3  3  3  4  1  6  3  6  4  6  8  6  2  4  5  3  1  6  3  4  1\n#>  [39]  3  4  8  3  3  1  4  4  5  2  4  3  2  4  4  4  8  3  5  5  5  6  1  4  4  6  3  3  3  1  2 10  3  2  2  0 10  2\n#>  [77]  4  5  6  2  8  3  5  4  8  7  4  5  3  6  5  5  8  6  6  3  4  4  1  3\n#> \n#> $empirical_endemics\n#>   [1] 117  87  88  72  61  89  88  80  56 131  86  74 115  89  94 112 107 125 140  71  67  54 104 102 117 131  90  96\n#>  [29]  79  73 121  87  80  84  95 106  84  93  94 134 112  87  83 119  58  79 100  85 104 112  70 130 113  77 126  90\n#>  [57]  91  79  88  74  66 118 104  66  88  79  68 137 100  90  76  50 173 125  77  75  75  57  90  97  98  65  76  77\n#>  [85]  67  90 109  94  74 110  76  81  59 118  66  71  61 124 105  82\n#> \n#> $empirical_non_endemics\n#>   [1] 3 7 1 4 2 2 5 1 2 4 9 4 3 4 3 3 2 3 2 2 4 1 5 0 6 3 3 7 3 0 4 4 3 1 5 1 4 1 1 4 4 2 3 0 2 4 3 2 2 2 2 3 0 3 5 2 4\n#>  [58] 2 3 5 0 2 3 3 3 1 3 1 1 9 2 2 0 0 6 1 3 2 4 1 6 3 5 3 7 4 4 2 2 3 2 4 8 5 4 2 2 3 0 3\nerrors <- DAISIEmainland::calc_error(\n  daisie_mainland_data = daisie_mainland_data,\n  ideal_ml = ideal_ml,\n  empirical_ml = empirical_ml\n)"},{"path":"summary-error-metrics-visualisation.html","id":"summary-error-metrics-visualisation","chapter":"5 Summary and error metrics visualisation","heading":"5 Summary and error metrics visualisation","text":"range plotting functions visualise summary metrics \nerror metrics (Section 4.3).plotting simulation summary error metrics need load \nresults multiple different mainland extinction scenarios.","code":"\nanalysis_results <- DAISIEmainland::read_analysis_results(\n  data_folder_path = system.file(\n    \"/inst/book/data/param_sets/\", \n    package = \"DAISIEmainland\"\n  )\n)"},{"path":"summary-error-metrics-visualisation.html","id":"simulation-summary-metrics","chapter":"5 Summary and error metrics visualisation","heading":"5.1 Simulation summary metrics","text":"First run simulation. simulation inference\nperformance section (Section 4.1).simulation summary metrics can calculate ideal empirical data :number species island end simulation.number colonisation events island (survived present) end simulation.can plot simulation summary metrics view mean, variance, maximum \nminimum number colonisations number species ideal empirical\ndata.","code":"\nset.seed(\n  1,\n  kind = \"Mersenne-Twister\",\n  normal.kind = \"Inversion\",\n  sample.kind = \"Rejection\"\n)\n\nreplicates <- 100\n\ndaisie_mainland_data <- DAISIEmainland::sim_island_with_mainland(\n  total_time = 1,\n  m = 100,\n  island_pars = c(0.5, 02.5, 50, 0.01, 0.5),\n  mainland_ex = 1.0,\n  mainland_sample_prob = 1,\n  mainland_sample_type = \"complete\",\n  replicates = replicates,\n  verbose = FALSE\n)\nideal_sim_num_spec <- DAISIEmainland::calc_num_spec(\n  multi_daisie_data = daisie_mainland_data$ideal_multi_daisie_data\n)\n\nideal_sim_num_spec\n#>   [1] 120  94  89  76  63  91  93  81  58 135  95  78 118  93  97 115 109 128 142  73  71  55 109 102 123 134  93 103\n#>  [29]  82  73 125  91  83  85 100 107  88  94  95 138 116  89  86 119  60  83 103  87 106 114  72 133 113  80 131  92\n#>  [57]  95  81  91  79  66 120 107  69  91  80  71 138 101  99  78  52 173 125  83  76  78  59  94  98 104  68  81  80\n#>  [85]  74  94 113  96  76 113  78  85  67 123  70  73  63 127 105  85\nideal_sim_num_col <- DAISIEmainland::calc_num_col(\n  multi_daisie_data = daisie_mainland_data$ideal_multi_daisie_data\n)\n\nideal_sim_num_col\n#>   [1] 44 33 39 28 29 30 33 35 28 42 36 32 46 38 30 38 45 40 40 28 28 28 41 34 39 45 34 32 33 29 31 36 33 32 38 34 36 31\n#>  [39] 29 41 43 34 36 34 24 30 33 28 42 37 24 37 43 33 45 35 27 37 37 28 29 40 36 30 31 32 27 48 40 47 30 22 41 38 37 27\n#>  [77] 35 28 37 33 40 27 38 30 35 38 39 37 30 37 31 33 25 42 35 37 29 31 31 36\nempirical_sim_num_spec <- DAISIEmainland::calc_num_spec(\n  multi_daisie_data = daisie_mainland_data$empirical_multi_daisie_data\n)\n\nempirical_sim_num_spec\n#>   [1] 120  94  89  76  63  91  93  81  58 135  95  78 118  93  97 115 109 128 142  73  71  55 109 102 123 134  93 103\n#>  [29]  82  73 125  91  83  85 100 107  88  94  95 138 116  89  86 119  60  83 103  87 106 114  72 133 113  80 131  92\n#>  [57]  95  81  91  79  66 120 107  69  91  80  71 138 101  99  78  52 173 125  83  76  78  59  94  98 104  68  81  80\n#>  [85]  74  94 113  96  76 113  78  85  67 123  70  73  63 127 105  85\nempirical_sim_num_col <- DAISIEmainland::calc_num_col(\n  multi_daisie_data = daisie_mainland_data$empirical_multi_daisie_data\n)\n\nempirical_sim_num_col\n#>   [1] 43 33 38 28 28 28 32 33 28 42 36 32 46 37 30 37 43 39 38 28 27 28 39 34 39 45 34 32 33 29 31 36 32 30 36 33 34 31\n#>  [39] 29 40 41 32 36 33 24 29 32 28 40 34 23 36 42 33 44 35 27 35 36 28 28 40 35 30 30 32 27 44 40 44 29 22 40 38 37 25\n#>  [77] 34 27 35 33 39 26 38 30 35 37 39 37 29 37 30 33 25 42 35 36 29 31 30 35\nplot_sim_metrics(\n  analysis_results = analysis_results, \n  output_file_path = NULL\n)"},{"path":"summary-error-metrics-visualisation.html","id":"inference-error-metrics","chapter":"5 Summary and error metrics visualisation","heading":"5.2 Inference error metrics","text":"error metrics run range mainland extinction rates. , \nerror metrics can plotted across different rates determine error\nvaries faster slower mainland evolutionary dynamics.Thus, plotting \\(\\Delta\\)CTT across mainland extinction rates zero two\n(per species per million years) informative. explained Section\n4.3 metric comparison \nideal empirical data sets produced DAISIEmainland simulation.percentage endemics island end simulation \npercentage maximum age colonisation times can plotted different values\nmainland extinction. boxplots shows 100 island replicates.\nleft hand panel data set complete information (ideal) \nright hand panel data set incomplete information (empirical).plots shown chapter exhaustive list available \npackage. example, error metrics can also plotted across different values mainland sampling\nprobability setting parameter = \"mainland_sample_prob\" plotting\nfunctions. script used make plots two manuscripts using \npackage can found \n.","code":"\nplot_ctt_boxplot(\n  analysis_results = analysis_results, \n  output_file_path = NULL,\n  parameter = \"mainland_ex\"\n)\nplot_endemics(\n  analysis_results = analysis_results, \n  output_file_path = NULL, \n  parameter = \"mainland_ex\"\n) \nplot_max_age(\n  analysis_results = analysis_results, \n  output_file_path = NULL, \n  parameter = \"mainland_ex\"\n)"},{"path":"references.html","id":"references","chapter":"6 References","heading":"6 References","text":"","code":""},{"path":"data-standards.html","id":"data-standards","chapter":"A Data standards","heading":"A Data standards","text":"","code":""},{"path":"data-standards.html","id":"reasoning","chapter":"A Data standards","heading":"A.1 Reasoning","text":"several data types used package. novel \npackage used elsewhere, others derive R packages.\ndocument provides standard data types formatted \nfunctions allow checking types.make sure data types correctly formatted corresponding\ncheck_* function .","code":""},{"path":"data-standards.html","id":"data-structure-types","chapter":"A Data standards","heading":"A.2 Data structure types","text":"","code":""},{"path":"data-standards.html","id":"daisie-mainland-data","chapter":"A Data standards","heading":"A.2.1 daisie_mainland_data","text":"list 2 elements, $ideal_multi_daisie_data \n$empirical_multi_daisie_data.\nelements format multi_daisie_data (see ). \noutput DAISIEmainland::sim_island_with_mainland().Function check object daisie_mainland_data DAISIEmainland::check_daisie_mainland_data()","code":""},{"path":"data-standards.html","id":"multi-daisie-data","chapter":"A Data standards","heading":"A.2.2 multi_daisie_data","text":"list daisie_data elements (see ). data structure \nsimulation run several replicates.function check object multi_daisie_data \nDAISIEmainland::check_multi_daisie_data().","code":""},{"path":"data-standards.html","id":"daisie-data","chapter":"A Data standards","heading":"A.2.3 daisie_data","text":"list n elements. first element list containing island_age\nsingle numeric, number species not_present island.\nfirst element daisie_data list can optionally include \nstt_table. stt_table matrix five columns variable number\nrows. Every subsequent element daisie_data list data island\nclade, containing: branching_times, stac, missing_species, optionally\ninformation recolonisations all_colonisations. branching_times \nnumeric vector containing island age, time island colonisation, \nsubsequent branching times (given time present).daisie_data single element multi_daisie_data list.function check object daisie_data \nDAISIEmainland::check_daisie_data().","code":""},{"path":"data-standards.html","id":"multi-mainland-clade","chapter":"A Data standards","heading":"A.2.4 multi_mainland_clade","text":"list mainland_clade objects. data type output DAISIEmainland::sim_mainland().function check object multi_mainland_clade \nDAISIEmainland::check_multi_mainland_clade().","code":""},{"path":"data-standards.html","id":"mainland-clade","chapter":"A Data standards","heading":"A.2.5 mainland_clade","text":"data frame seven columns one rows. column names :\nspec_id, main_anc_id, spec_type, branch_code, branch_t,\nspec_origin_t, spec_ex_t. example mainland_clade can created\nusing DAISIEmainland::create_test_mainland_clade().function check object mainland_clade \nDAISIEmainland::check_mainland_clade()","code":""},{"path":"data-standards.html","id":"island-tbl","chapter":"A Data standards","heading":"A.2.6 island_tbl","text":"data frame island species output sim_island converted\ndaisie_data format create_island. data type output \nDAISIEmainland::sim_island(). example island_tbl can created\nusing DAISIEmainland::create_test_island_tbl().function check object island_tbl \nDAISIEmainland::check_island_tbl().","code":""}]
